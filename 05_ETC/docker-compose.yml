version: "3.8"

services:
  client:
    image: havetodo/client:latest
    container_name: client-ctr
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "8888:8888" # develop port
      - "4173:4173" # preview port
    volumes:
      - ../../HaveTodoClient:/root/HaveTodoClient
    command: sh -c "npm ci && npm run dev"
  server:
    image: havetodo/server:latest
    depends_on:
      - rdb
      - nosql
    container_name: server-ctr
    environment:
      - DD_API_KEY=${DD_API_KEY}
    ports:
      - "8080:8080"
      - "8000:8000"
    volumes:
      - $HOME/.m2:/root/.m2
      - ../../HaveTodoServer:/app/HaveTodoServer
  rdb:
    image: postgres:14.4-alpine3.16
    container_name: rdb-ctr
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGPASSWORD=postgres
      - DATABASE_HOST=localhost
    ports:
      - "5432:5432"
    volumes:
      - $PWD/sql:/docker-entrypoint-initdb.d
  rdb-test:
    image: postgres:14.4-alpine3.16
    container_name: rdb-test-ctr
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGPASSWORD=postgres
      - DATABASE_HOST=localhost
    ports:
      - "5431:5432"
    volumes:
      - $PWD/sql:/docker-entrypoint-initdb.d
  e2e:
    image: havetodo/e2e-test:latest
    container_name: e2e-ctr
    hostname: e2e-ctr
    command: sh -c "npm ci && npm run cy:verify && while :; do sleep 10; done"
    environment:
      - CI=1
    volumes:
      - ./e2e/app:/app
      - ./e2e/results:/results
  nosql:
    image: "redis:latest"
    container_name: nosql-ctr
    ports:
      - "6379:6379"
  # dd-agent:
  #     image: gcr.io/datadoghq/agent:7
  #     container_name: datadog-ctr
  #     environment:
  #       - DD_API_KEY=${DD_API_KEY}
  #       - DD_SITE=datadoghq.com
  #       - DD_LOGS_ENABLED=true
  #       - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
  #       - DD_AC_EXCLUDE=image:gcr.io/datadoghq/agent
  #     volumes:
  #       - /var/run/docker.sock:/var/run/docker.sock:ro
  #       - /proc/:/host/proc/:ro
  #       - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
  #       - /opt/datadog-agent/run:/opt/datadog-agent/run:rw
  # mail:
  #   image: mailhog/mailhog
  #   container_name: mail-ctr
  #   ports:
  #     - "8025:8025"
  #   environment:
  #     MH_STORAGE: mail
  #     MH_MAILDIR_PATH: /tmp
  #   volumes:
  #     - mail:/tmp
